name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    if: github.repository == 'kordamp/ikonli'

    steps:
      - uses: actions/checkout@v2

      - name: Set release version
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo $VERSION > VERSION
          sed -i -e "s/^\:project-version\:\ .*/:project-version: ${VERSION}/g" README.adoc
          git add VERSION
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version $VERSION"
          git push origin master
          git rev-parse HEAD > HEAD

      - name: Upload files
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            HEAD

  build:
    name: Build
    needs: version
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Read HEAD ref
        id: head
        uses: juliangruber/read-file-action@v1
        with:
          path: artifacts/HEAD

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.head.outputs.content }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradlew-

      - name: Build
        run: ./gradlew -Prelease=true build

      - name: Jlink & JPackage
        run: './gradlew -Prelease=true :ikonli-browser:jlinkZip :ikonli-browser:jpackage'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          if-no-files-found: ignore
          path: |
            apps/ikonli-browser/build/distributions/ikonli-browser-*x86_64.zip
            apps/ikonli-browser/build/packagers/ikonli-browser-*.rpm
            apps/ikonli-browser/build/packagers/ikonli-browser-*.dmg
            apps/ikonli-browser/build/packagers/ikonli-browser-*.exe
            apps/ikonli-browser/build/packagers/ikonli-browser-*.msi
            apps/ikonli-browser/build/packagers/ikonli-browser-*.pkg
            apps/ikonli-browser/build/packagers/ikonli-browser-*.deb

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      # must read HEAD before checkout
      - name: Download build artifacts
        uses: actions/download-artifact@v2

      - name: Read HEAD ref
        id: head
        uses: juliangruber/read-file-action@v1
        with:
          path: artifacts/HEAD

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.head.outputs.content }}
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Deploy
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew -Prelease=true -Pfull-release=true \
          -PsonatypeUsername=${{ secrets.SONATYPE_USERNAME }} \
          -PsonatypePassword=${{ secrets.SONATYPE_PASSWORD }} \
          build publishToSonatype closeAndReleaseSonatypeStagingRepository -S

      - name: Release
        uses: jreleaser/release-action@v1
        with:
          arguments: full-release -P artifactsDir=artifacts
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
